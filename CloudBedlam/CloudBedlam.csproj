<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="14.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <Import Project="$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props" Condition="Exists('$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props')" />
  <PropertyGroup>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProjectGuid>{5D0300A3-E953-4C61-AA11-994C9265B059}</ProjectGuid>
    <OutputType>Exe</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ChaosApe</RootNamespace>
    <AssemblyName>CloudBedlam</AssemblyName>
    <FileAlignment>512</FileAlignment>
    <AutoGenerateBindingRedirects>true</AutoGenerateBindingRedirects>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' ">
    <PlatformTarget>anycpu</PlatformTarget>
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>bin\Debug\</OutputPath>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
    <CustomCommands>
      <CustomCommands>
        <Command>
          <type>AfterBuild</type>
          <command>cp -a ${ProjectDir}/Bash ${TargetDir}</command>
          <workingdir>${TargetDir}</workingdir>
        </Command>
        <Command>
          <type>AfterBuild</type>
          <command>cp ${ProjectDir}/Chaos.config ${TargetDir}</command>
        </Command>
        <Command>
          <type>AfterBuild</type>
          <command>cp ${ProjectDir}/CrunchMem  ${TargetDir}</command>
        </Command>
      </CustomCommands>
    </CustomCommands>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
    <PlatformTarget>x64</PlatformTarget>
    <DebugType>pdbonly</DebugType>
    <Optimize>true</Optimize>
    <OutputPath>bin\Release\</OutputPath>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)' == 'Debug|x64'">
    <DebugSymbols>true</DebugSymbols>
    <OutputPath>bin\x64\Debug\</OutputPath>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <DebugType>full</DebugType>
    <PlatformTarget>x64</PlatformTarget>
    <ErrorReport>prompt</ErrorReport>
    <CodeAnalysisRuleSet>MinimumRecommendedRules.ruleset</CodeAnalysisRuleSet>
    <Prefer32Bit>true</Prefer32Bit>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)' == 'Release|x64'">
    <OutputPath>bin\x64\Release\</OutputPath>
    <DefineConstants>TRACE</DefineConstants>
    <Optimize>true</Optimize>
    <DebugType>pdbonly</DebugType>
    <PlatformTarget>x64</PlatformTarget>
    <ErrorReport>prompt</ErrorReport>
    <CodeAnalysisRuleSet>MinimumRecommendedRules.ruleset</CodeAnalysisRuleSet>
    <Prefer32Bit>true</Prefer32Bit>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Core" />
    <Reference Include="System.Xml.Linq" />
    <Reference Include="System.Data.DataSetExtensions" />
    <Reference Include="Microsoft.CSharp" />
    <Reference Include="System.Data" />
    <Reference Include="System.Xml" />
    <Reference Include="NLog">
      <HintPath>..\packages\NLog.4.4.9\lib\net45\NLog.dll</HintPath>
    </Reference>
  </ItemGroup>
  <ItemGroup>
    <Compile Include="Bedlam.cs" />
    <Compile Include="Config\BandwidthConfiguration.cs" />
    <Compile Include="Config\ChaosBase.cs" />
    <Compile Include="Config\ChaosConfiguration.cs" />
    <Compile Include="Config\ChaosOperation.cs" />
    <Compile Include="Config\DisconnectConfiguration.cs" />
    <Compile Include="Config\EmulationConfigurationBase.cs" />
    <Compile Include="Config\Endpoint.cs" />
    <Compile Include="Config\LatencyConfiguration.cs" />
    <Compile Include="Config\LossConfiguration.cs" />
    <Compile Include="Config\NetworkEmulation.cs" />
    <Compile Include="Config\Orchestration.cs" />
    <Compile Include="DisposeService.cs" />
    <Compile Include="Extensions\DirectoryInfoExtensions.cs" />
    <Compile Include="Extensions\PathEx.cs" />
    <Compile Include="Extensions\ProcessExtensions.cs" />
    <Compile Include="Operations\CpuPressure.cs" />
    <Compile Include="Operations\MemoryPressure.cs" />
    <Compile Include="Operations\NetworkEmulation.cs" />
    <Compile Include="Operations\OperationBase.cs" />
    <Compile Include="Program.cs" />
    <Compile Include="Properties\AssemblyInfo.cs" />
    <Compile Include="Config\NetEmProfileAttribute.cs" />
    <Compile Include="Config\NetworkEmProfile.cs" />
  </ItemGroup>
  <ItemGroup>
    <None Include="App.config">
      <SubType>Designer</SubType>
    </None>
    <None Include="Chaos.config">
      <SubType>Designer</SubType>
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
    <Content Include="NLog.config">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </Content>
    <None Include="NLogNE.config" />
    <None Include="packages.config" />
    <None Include="Bash\netem-ip-latency.sh" />
    <None Include="Bash\stress-mem.sh" />
    <None Include="Bash\stress-cpu.sh" />
    <None Include="Bash\netem-ip-bandwidth.sh" />
    <None Include="Bash\netem-ip-bandwidth-multi.sh" />
    <None Include="CrunchMem" />
  </ItemGroup>
  <ItemGroup>
    <Content Include="NLog.dll" />
  </ItemGroup>
  <ItemGroup />
  <ItemGroup>
    <Folder Include="Bash\" />
  </ItemGroup>
  <Import Project="$(MSBuildToolsPath)\Microsoft.CSharp.targets" />
  <PropertyGroup>
    <PostBuildEvent Condition=" '$(OS)' != 'Unix' ">if not exist "$(TargetDir)ChaosBinaries" mkdir "$(TargetDir)ChaosBinaries"
copy "$(ProjectDir)CrunchDisk.exe" "$(TargetDir)ChaosBinaries"
copy "$(ProjectDir)procdump.exe" "$(TargetDir)ChaosBinaries"
copy "$(ProjectDir)StressTool.exe" "$(TargetDir)ChaosBinaries"
copy "$(ProjectDir)testlimit64.exe" "$(TargetDir)ChaosBinaries"
copy "$(ProjectDir)NLog.dll" "$(TargetDir)ChaosBinaries"
copy "$(ProjectDir)NLog.xml" "$(TargetDir)ChaosBinaries"
copy "$(ProjectDir)chaos.config" "$(TargetDir)"
copy "$(ProjectDir)nlogcd.config" "$(TargetDir)"
copy "$(ProjectDir)nlogne.config" "$(TargetDir)"
copy "$(ProjectDir)nlogcd.config" "$(TargetDir)ChaosBinaries"
copy "$(ProjectDir)packages.config" "$(TargetDir)"
if not exist "$(TargetDir)ChaosBinaries\NetEm" mkdir "$(TargetDir)ChaosBinaries\NetEm"
copy "$(ProjectDir)NetworkEmulator.exe" "$(TargetDir)ChaosBinaries\NetEm"
copy "$(ProjectDir)NetworkEmulator.dll" "$(TargetDir)ChaosBinaries\NetEm"
copy "$(ProjectDir)nlogne.config" "$(TargetDir)ChaosBinaries\NetEm"
copy "$(ProjectDir)newcom.dll" "$(TargetDir)ChaosBinaries\NetEm"
copy "$(ProjectDir)newcom.tlb" "$(TargetDir)ChaosBinaries\NetEm"
copy "$(ProjectDir)userapi.dll" "$(TargetDir)ChaosBinaries\NetEm"
copy "$(ProjectDir)NLog.dll" "$(TargetDir)ChaosBinaries\NetEm"
copy "$(ProjectDir)NLog.xml" "$(TargetDir)ChaosBinaries\NetEm"
if not exist "$(TargetDir)ChaosBinaries\NetEm\NetEmDriver" mkdir "$(TargetDir)ChaosBinaries\NetEm\NetEmDriver"
copy "$(ProjectDir)NetEmDriver\*" "$(TargetDir)ChaosBinaries\NetEm\NetEmDriver"</PostBuildEvent>
  </PropertyGroup>
  <PropertyGroup>
    <PreBuildEvent>
    </PreBuildEvent>
  </PropertyGroup>
  <!-- To modify your build process, add your task inside one of the targets below and uncomment it. 
       Other similar extension points exist, see Microsoft.Common.targets.
  <Target Name="BeforeBuild">
  </Target>
  <Target Name="AfterBuild">
  </Target>
  -->
</Project>